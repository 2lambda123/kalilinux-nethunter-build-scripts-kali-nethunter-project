#!/sbin/sh
#Nethunter Nuker
#shell script by OsmOsis @ xda
#created by CaliBerrr

OUTFD=/proc/self/fd/$2;
ZIPFILE="$3";
[ "$OUTFD" ] || OUTFD=/proc/$$/fd/1;


test "$tmp" || tmp=/tmp/nethunter/uninstaller;
test "$ANDROID_ROOT" || ANDROID_ROOT=/system;

ui_print() {
  until [ ! "$1" ]; do
    echo "ui_print $1
      ui_print" >> $OUTFD;
    shift;
  done;
}

ui_printfile() {
  while IFS='' read -r line || $BB [[ -n "$line" ]]; do
    ui_print "$line";
  done < $1;
}

show_progress() { echo "progress $1 $2" >> $OUTFD; }

set_progress() { echo "set_progress $1" >> $OUTFD; }

setup_mountpoint() {
  test -L $1 && $BB mv -f $1 ${1}_link;
  if [ ! -d $1 ]; then
    rm -f $1;
    mkdir -p $1;
  fi;
}

is_mounted() { $BB mount | $BB grep -q " $1 "; }

mount_all() {
  if ! is_mounted /data; then
    $BB mount /data;
 fi; 
  setup_mountpoint $ANDROID_ROOT;
  if ! is_mounted $ANDROID_ROOT; then
    $BB mount -o rw -t auto $ANDROID_ROOT 2>/dev/null;
  fi;
  case $ANDROID_ROOT in
    /system_root) setup_mountpoint /system;;
    /system)
      if ! is_mounted /system && ! is_mounted /system_root; then
        setup_mountpoint /system_root;
        $BB mount -o rw -t auto /system_root;
      elif [ -f /system/system/build.prop ]; then
        setup_mountpoint /system_root;
        $BB mount --move /system /system_root;
      fi;
      if [ $? != 0 ]; then
        $BB umount /system;
        $BB umount -l /system 2>/dev/null;
        test -e /dev/block/bootdevice/by-name/system || local slot=$(getprop ro.boot.slot_suffix 2>/dev/null);
        $BB mount -o rw -t auto /dev/block/bootdevice/by-name/system$slot /system_root;
      fi;
    ;;
  esac;
  if is_mounted /system_root; then
    if [ -f /system_root/build.prop ]; then
      $BB mount -o bind /system_root /system;
    else
      $BB mount -o bind /system_root/system /system;
    fi;
  fi;
}

umount_all() {
  ( $BB umount /system;
    $BB umount -l /system;
    if [ -e /system_root ]; then
      $BB umount /system_root;
      $BB umount -l /system_root;
    fi;
    $BB umount /data;
    $BB umount -l /data;) 2>/dev/null;
}

cleanup() {
  cd $(dirname $tmp);
  rm -rf $tmp;
}

delete_recursive() {
rm -rf "$@"; }


mkdir -p $tmp;
cd $tmp;
unzip -o "$ZIPFILE";

BB=$tmp/tools/busybox;
chmod 755 $BB;
SYSTEM="/system"

if [ -f banner ]; then
  ui_printfile banner;
  ui_print " ";
fi;

set_progress 0.0;
ui_print "- Mounting Partitions";
mount_all;

set_progress 0.1;
ui_print "- Removing Kali Nethunter";
delete_recursive "${SYSTEM}/app/NetHunter";

ui_print "- Removing Nethunter-Terminal";
delete_recursive "${SYSTEM}/app/NetHunter-Terminal";

ui_print "- Removing Nethunter-KeX";
delete_recursive "${SYSTEM}/app/NetHunter-KeX";

ui_print "- Removing Nethunter-Store";
delete_recursive "${SYSTEM}/app/NetHunter-Store";

ui_print "- Removing NetHunterStorePrivilegedExtension";
delete_recursive "${SYSTEM}/priv-app/NetHunterStorePrivilegedExtension";
delete_recursive "${SYSTEM}/etc/permissions/com.offsec.nethunter.store.privileged.xml";


ui_print "- Deleting Nethunter Apps from /data if present";
delete_recursive "/data/data/com.offsec.nethunter";
delete_recursive "/data/data/com.offsec.nethunter.kex";
delete_recursive "/data/data/com.offsec.nethunter.store";
delete_recursive "/data/data/com.offsec.nhterm";

delete_recursive "/data/app/com.offsec.nethunter";
delete_recursive "/data/app/com.offsec.nethunter.kex";
delete_recursive "/data/app/com.offsec.nethunter.store";
delete_recursive "/data/app/com.offsec.nhterm";

set_progress 0.2;
ui_print "- Removing Kali Chroot";
delete_recursive "/data/local/nhsystem";

set_progress 0.3;
ui_print "- Removing Bootkali Scripts";
delete_recursive "${SYSTEM}/bin/bootkali";
delete_recursive "${SYSTEM}/bin/bootkali_init";
delete_recursive "${SYSTEM}/bin/bootkali_bash";
delete_recursive "${SYSTEM}/bin/bootkali_login";
delete_recursive "${SYSTEM}/bin/killall";

set_progress 0.4;
ui_print "- Removing xbin and sbin Binaries";
delete_recursive "${SYSTEM}/xbin/hid-keyboard";
delete_recursive "${SYSTEM}/xbin/busybox_nh";


set_progress 0.5;
ui_print "- Removing /etc binaries";
delete_recursive "${SYSTEM}/etc/firmware";
delete_recursive "${SYSTEM}/etc/nano";
delete_recursive "${SYSTEM}/etc/terminfo";
delete_recursive "${SYSTEM}/etc/init.d";


set_progress 0.6;
ui_print "- Removing bin binaries";
delete_recursive "${SYSTEM}/bin/lualibs";
delete_recursive "${SYSTEM}/bin/scripts";

set_progress 0.7;
ui_print "- Removing all leftovers";
delete_recursive "${SYSTEM}/80-nethunter.sh";
delete_recursive "/data/local/userinit.sh";
delete_recursive "/data/local/userinit.d";


set_progress 0.8;
ui_print "- Uninstall Complete"
ui_print "- Unmounting Partitions";
umount_all;

ui_print "- Cleaning Up";
cleanup;
ui_print " ";
set_progress 1.0;
